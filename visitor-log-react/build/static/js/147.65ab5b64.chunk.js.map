{"version":3,"file":"static/js/147.65ab5b64.chunk.js","mappings":"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","sources":["Register.js"],"sourcesContent":["import {useState} from 'react'\nimport 'css/forms.css'\nimport {auth, db} from 'lib/firebase'\nimport {useNavigate} from 'react-router-dom'\nimport {createUserWithEmailAndPassword, sendEmailVerification} from 'firebase/auth'\nimport {useAuthValue} from './AuthContext'\nimport { handleFirebaseError } from 'lib/firebase'\nimport { collection, query } from \"firebase/firestore\"\nimport { useFirestoreQuery, useFirestoreCollectionMutation} from '@react-query-firebase/firestore'\n\n\nfunction Register() {\n\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [dodaac, setDodaac] = useState('')\n  const [error, setError] = useState('')\n  const navigate = useNavigate()\n  const {setTimeActive} = useAuthValue()\n  console.log(\"#READ DATABASE\")\n  const ref = query(collection(db, \"DODAACS\"))\n  const dodaacs = useFirestoreQuery([\"dodaacs\"], ref)\n  const userRef = query(collection(db, \"users\"))\n  const userMutation = useFirestoreCollectionMutation(userRef)\n\n  const validatePassword = () => {\n    let isValid = true\n    if (password !== '' && confirmPassword !== ''){\n      if (password !== confirmPassword) {\n        isValid = false\n        setError('Passwords does not match')\n      }\n    }\n\n    if (dodaac === '' || dodaac === \"Select Dodaac..\") {\n      isValid = false\n      setError('DODAAC is required!')\n    }\n\n    if (email.substring(email.length - 4, email.length) !== \".mil\") {\n      isValid = false\n      setError(\"You muse use a .mil email!\")\n    }\n    return isValid\n  }\n\n  const register = e => {\n    e.preventDefault()\n    setError('')\n    if(validatePassword()) {\n      // Create a new user with email and password using firebase\n        createUserWithEmailAndPassword(auth, email, password)\n        .then(() => {\n          console.log(\"#WROTE DATABASE\")\n          userMutation.mutate({\n            dodaac: dodaac,\n            uid: auth.currentUser.uid}\n          )\n          sendEmailVerification(auth.currentUser)   \n          .then(() => {\n            setTimeActive(true)\n            navigate('/verify-email')\n          }).catch((err) => alert(err.message))\n        })\n        .catch(err => setError(handleFirebaseError(err.message)))\n    }\n    setEmail('')\n    setPassword('')\n    setConfirmPassword('')\n  }\n\n  return (\n    <div className='center'>\n      <div className='auth'>\n        <h1>Register</h1>\n        {error && <div className='auth__error'>{error}</div>}\n        <form onSubmit={register} name='registration_form'>\n          <input \n            type='email' \n            value={email}\n            placeholder=\"Enter your email\"\n            required\n            onChange={e => setEmail(e.target.value)}/>\n\n          <input \n            type='password'\n            value={password} \n            required\n            placeholder='Enter your password'\n            onChange={e => setPassword(e.target.value)}/>\n\n            <input \n            type='password'\n            value={confirmPassword} \n            required\n            placeholder='Confirm password'\n            onChange={e => setConfirmPassword(e.target.value)}/>\n            \n            <select onChange={e => setDodaac(e.target.value)}>\n              <option key=\"select\">Select Dodaac..</option>\n              {dodaacs.status === \"success\" && dodaacs.data.docs.map(docSnap => \n                    <option key={docSnap.data().dodaac}>{docSnap.data().dodaac}</option>\n                  )}\n            </select>\n          <button type='submit'>Register</button>\n          <span><a href='/login' style={{textDecoration: \"none\", color: \"#1976d2\"}}>Login to existing Account </a></span>\n          <span><a href='/register-dodaac' style={{textDecoration: \"none\", color: \"#1976d2\"}}>Register New Dodaac</a></span>\n        </form>  \n      </div>\n    </div>\n  )\n}\n\nexport default Register"],"names":["_useState","useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","confirmPassword","setConfirmPassword","_useState7","_useState8","dodaac","setDodaac","_useState9","_useState10","error","setError","navigate","useNavigate","setTimeActive","useAuthValue","console","log","ref","query","collection","db","dodaacs","useFirestoreQuery","userRef","userMutation","useFirestoreCollectionMutation","_jsx","className","children","_jsxs","onSubmit","e","preventDefault","isValid","substring","length","validatePassword","createUserWithEmailAndPassword","auth","then","mutate","uid","sendEmailVerification","catch","err","alert","message","handleFirebaseError","name","type","value","placeholder","required","onChange","target","status","data","docs","map","docSnap","href","style","textDecoration","color"],"sourceRoot":""}