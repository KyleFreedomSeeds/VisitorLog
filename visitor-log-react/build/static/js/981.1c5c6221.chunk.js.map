{"version":3,"file":"static/js/981.1c5c6221.chunk.js","mappings":"qOAsEA,MA/DA,WAEE,IAAOA,GAAeC,EAAAA,EAAAA,KAAfD,YACPE,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAAoCP,EAAAA,EAAAA,KAA7BQ,EAAUD,EAAVC,WAAYC,EAAaF,EAAbE,cACbC,GAAWC,EAAAA,EAAAA,MAwCjB,OAtCAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAWC,aAAY,WAChB,OAAXf,QAAW,IAAXA,GAAAA,EAAagB,SACZC,MAAK,WACU,OAAXjB,QAAW,IAAXA,GAAAA,EAAakB,gBACdC,cAAcL,GACdH,EAAS,KAEb,IACCS,OAAM,SAACC,GACNC,MAAMD,EAAIE,QACZ,GACF,GAAG,IACL,GAAG,CAACZ,EAAUX,KAEda,EAAAA,EAAAA,YAAU,WACR,IAAIC,EAAW,KAUf,OATGL,GAAuB,IAATH,EACfQ,EAAWC,aAAY,WACrBR,GAAQ,SAACD,GAAI,OAAKA,EAAO,CAAC,GAC5B,GAAG,KACa,IAATA,IACPI,GAAc,GACdH,EAAQ,IACRY,cAAcL,IAET,kBAAMK,cAAcL,EAAU,CACvC,GAAG,CAACL,EAAYH,EAAMI,KAYpBc,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAAQC,UACrBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,+BACJC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,4CAA+CF,EAAAA,EAAAA,KAAA,UACvDA,EAAAA,EAAAA,KAAA,QAAAE,SAAkB,OAAX1B,QAAW,IAAXA,OAAW,EAAXA,EAAa4B,YAEtBJ,EAAAA,EAAAA,KAAA,QAAAE,SAAM,gEACNC,EAAAA,EAAAA,MAAA,UACEE,QAnBwB,YAC9BC,EAAAA,EAAAA,IAAsBC,EAAAA,GAAAA,aACrBd,MAAK,WACJP,GAAc,EAChB,IAAGU,OAAM,SAACC,GACRC,MAAMD,EAAIE,QACZ,GACF,EAaQS,SAAUvB,EAAWiB,SAAA,CACtB,gBAAcjB,GAAcH,SAIrC,C","sources":["VerifyEmail.js"],"sourcesContent":["import 'css/verifyEmail.css'\nimport {useAuthValue} from './AuthContext'\nimport {useState, useEffect} from 'react'\nimport {auth} from 'lib/firebase'\nimport {sendEmailVerification} from 'firebase/auth'\nimport {useNavigate} from 'react-router-dom'\n\nfunction VerifyEmail() {\n\n  const {currentUser} = useAuthValue()\n  const [time, setTime] = useState(60)\n  const {timeActive, setTimeActive} = useAuthValue()\n  const navigate = useNavigate()\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      currentUser?.reload()\n      .then(() => {\n        if(currentUser?.emailVerified){\n          clearInterval(interval)\n          navigate('/')\n        }\n      })\n      .catch((err) => {\n        alert(err.message)\n      })\n    }, 1000)\n  }, [navigate, currentUser])\n\n  useEffect(() => {\n    let interval = null\n    if(timeActive && time !== 0 ){\n      interval = setInterval(() => {\n        setTime((time) => time - 1)\n      }, 1000)\n    }else if(time === 0){\n      setTimeActive(false)\n      setTime(60)\n      clearInterval(interval)\n    }\n    return () => clearInterval(interval);\n  }, [timeActive, time, setTimeActive])\n\n  const resendEmailVerification = () => {\n    sendEmailVerification(auth.currentUser)\n    .then(() => {\n      setTimeActive(true)\n    }).catch((err) => {\n      alert(err.message)\n    })\n  }\n\n  return (\n    <div className='center'>\n      <div className='verifyEmail'>\n        <h1>Verify your Email Address</h1>\n        <p>\n          <strong>A Verification email has been sent to:</strong><br/>\n          <span>{currentUser?.email}</span>\n        </p>\n        <span>Follow the instruction in the email to verify your account</span>       \n        <button \n          onClick={resendEmailVerification}\n          disabled={timeActive}\n        >Resend Email {timeActive && time}</button>\n      </div>\n    </div>\n  )\n}\n\nexport default VerifyEmail\n"],"names":["currentUser","useAuthValue","_useState","useState","_useState2","_slicedToArray","time","setTime","_useAuthValue2","timeActive","setTimeActive","navigate","useNavigate","useEffect","interval","setInterval","reload","then","emailVerified","clearInterval","catch","err","alert","message","_jsx","className","children","_jsxs","email","onClick","sendEmailVerification","auth","disabled"],"sourceRoot":""}